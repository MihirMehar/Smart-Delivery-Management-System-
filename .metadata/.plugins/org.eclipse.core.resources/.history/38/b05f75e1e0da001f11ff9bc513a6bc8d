package com.orderservices.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.orderservices.entity.Order;
import com.orderservices.exception.OrderNotFoundException;
import com.orderservices.services.OrderService;

@RestController
@RequestMapping("/orders")
public class OrderController {

	@Autowired
	private OrderService orderService;

	@PostMapping
	public ResponseEntity<Order> createOrder(@RequestBody Order order) {
		Order o1 = orderService.createOrder(order);
		return new ResponseEntity<Order>(order, HttpStatus.CREATED);
	}

	@GetMapping
	public ResponseEntity<List<Order>> getAllOrders() {
		List<Order> allOrders = orderService.getAllOrders();
		return ResponseEntity.ok(allOrders);
	}

	@GetMapping("/{orderId}")
	public ResponseEntity<Order> getOrderById(@PathVariable String orderId) throws OrderNotFoundException {
		Order o1 = orderService.getOrderById(orderId);
		return ResponseEntity.ok(o1);
	}

	@PutMapping("/{orderid}")
	public ResponseEntity<String> updateOrder(@PathVariable String orderId, @RequestBody Order order)
			throws OrderNotFoundException {
		orderService.updateOrder(orderId, order);
		String message = "Order with ID " + orderId + " has been successfully updated.";
		return ResponseEntity.status(HttpStatus.OK).body(message);
	}

	@DeleteMapping("/{orderId}")
	public ResponseEntity<String> deleteOrder(@PathVariable String orderId) throws OrderNotFoundException {
		String message = "Order id is delete successfully on the server!";
		orderService.deleteOrder(orderId);
		return ResponseEntity.status(HttpStatus.OK).body(message);
	}
}
